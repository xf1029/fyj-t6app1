package com.a51tgt.fyj.ui;

import android.annotation.SuppressLint;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.design.widget.TabLayout;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentPagerAdapter;
import android.support.v4.view.ViewPager;
import android.support.v7.app.AppCompatActivity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.WindowManager;
import android.widget.ImageView;
import android.widget.Toast;

import com.a51tgt.fyj.MZApplication;
import com.a51tgt.fyj.R;
import com.a51tgt.fyj.abstract_face.OnNoticeUI;
import com.a51tgt.fyj.adapter.FlowMallAdapter;
import com.a51tgt.fyj.bean.DeviceInfo;
import com.a51tgt.fyj.bean.DevicePackageInfo;
import com.a51tgt.fyj.bean.FlowProductInfo;
import com.a51tgt.fyj.bean.HttpResponseData;
import com.a51tgt.fyj.bluetooth.BluetoothUtil;
import com.a51tgt.fyj.comm.APIConstants;
import com.a51tgt.fyj.comm.TcpConfig;
import com.a51tgt.fyj.net.OkHttpClientManager;
import com.a51tgt.fyj.net.SendRequest;
import com.a51tgt.fyj.utils.CommUtil;
import com.a51tgt.fyj.utils.RestartAPPUtil;
import com.a51tgt.fyj.utils.TipUtil;
import com.znq.zbarcode.CaptureActivity;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

public class MainActivity extends BaseActivity implements OnNoticeUI {

    private Context mContext;
    private SectionsPagerAdapter mSectionsPagerAdapter;
    private TabLayout tabLayout;
    public ViewPager mViewPager;
    private boolean quit = false;
    private DeviceInfoFragment deviceInfoFragment;

    @Override
    protected void onCreate(Bundle savedInstanceState) {

        if (savedInstanceState != null) {
            savedInstanceState.remove("android:support:fragments");
    }
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        mContext = MainActivity.this;

        //透明状态栏
        getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_STATUS);
        //透明导航栏
        getWindow().addFlags(WindowManager.LayoutParams.FLAG_TRANSLUCENT_NAVIGATION);

        mSectionsPagerAdapter = new SectionsPagerAdapter(getSupportFragmentManager());
        mViewPager = (ViewPager) findViewById(R.id.container);
        mViewPager.setOffscreenPageLimit(5);
        mViewPager.setAdapter(mSectionsPagerAdapter);
        tabLayout = (TabLayout) findViewById(R.id.tl_tabs);
        tabLayout.setupWithViewPager(mViewPager);
        setupTabIcons();
        mViewPager.addOnPageChangeListener(new ViewPager.OnPageChangeListener() {
            @Override
            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
            }

            @Override
            public void onPageSelected(int position) {

                switch (position) {
                    case 0:
                        if(deviceInfoFragment != null) //针对基本信息修改后的更新
                            deviceInfoFragment.upDateFragment();
                        break;
                    case 1:
                        break;
                    case 2:
                        break;
                    case 3:
                        break;
                    default:
                        break;
                }
            }

            @Override
            public void onPageScrollStateChanged(int state) {
            }
        });

        MZApplication.getInstance().addActivity(this);

    }


    @Override
    protected void onResume() {
        super.onResume();
        MZApplication.getInstance().setOnNoticeUiListener(this, OnNoticeUI.KEY_TYPE_MAIN_ACTIVITY);
    }

    @Override
    protected void onPause() {
        super.onPause();
    }

    @Override
    protected void onDestroy() {
        super.onDestroy();
        MZApplication.getInstance().setOnNoticeUiListener(null, OnNoticeUI.KEY_TYPE_MAIN_ACTIVITY);
        BluetoothUtil.getInstance().stopBluetoothService();
        APIConstants.isBluetoothConnection = false;
        if (deviceInfoFragment.timer!=null) {
            deviceInfoFragment.timer.cancel();
        }
        BluetoothUtil.getInstance().setBtConnectCallback(null);
    }

    @Override
    public void onBackPressed() {
        finish();
//        if (!quit) {
//            quit = true;
//            Toast.makeText(this, R.string.toast_back_exit, Toast.LENGTH_SHORT).show();
//            new Handler().postDelayed(new Runnable() {
//                @Override
//                public void run() {
//                    quit = false;
//                }
//            }, 2000);
//        } else {
//            MZApplication.getInstance().exit();
//        }
    }

    @Override
    protected void onSaveInstanceState(Bundle outState) {
//        super.onSaveInstanceState(outState);
    }

    @Override
    protected void onRestoreInstanceState(Bundle savedInstanceState) {
//        super.onRestoreInstanceState(savedInstanceState);
    }

    private void setupTabIcons() {
        ImageView tabHome = (ImageView) LayoutInflater.from(this).inflate(R.layout.custom_tab, null);
        tabHome.setImageResource(R.drawable.ic_s_home);
        tabHome.setSelected(true);
        tabLayout.getTabAt(0).setCustomView(tabHome);
        ImageView tabNews = (ImageView) LayoutInflater.from(this).inflate(R.layout.custom_tab, null);
        tabNews.setImageResource(R.drawable.ic_s_mall);
        tabLayout.getTabAt(1).setCustomView(tabNews);
        ImageView tabCards = (ImageView) LayoutInflater.from(this).inflate(R.layout.custom_tab, null);
        tabCards.setImageResource(R.drawable.ic_s_setting);
        tabLayout.getTabAt(2).setCustomView(tabCards);
    }


    @Override
    public void onNotice(int NOTICE_TYPE, Object object) {
    }

    public class SectionsPagerAdapter extends FragmentPagerAdapter {

        public SectionsPagerAdapter(FragmentManager fm) {
            super(fm);
        }

        @Override
        public Fragment getItem(int position) {
            switch (position) {
                case 0:
                    deviceInfoFragment = DeviceInfoFragment.newInstance();
                    return deviceInfoFragment;
                case 1:
                    return FlowMallFragment.newInstance();
                case 2:
                    return DeviceSettingFragment.newInstance();
                default:
                    break;
            }
            return DeviceInfoFragment.newInstance();
        }

        @Override
        public int getCount() {
            return 3;
        }

        @Override
        public CharSequence getPageTitle(int position) {
            return null;
        }
    }
}
