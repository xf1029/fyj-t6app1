package com.a51tgt.fyj.ui;

import android.annotation.SuppressLint;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.DialogInterface;
import android.content.Intent;
import android.content.IntentFilter;
import android.net.ConnectivityManager;
import android.net.NetworkInfo;
import android.net.wifi.WifiManager;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v7.app.AppCompatActivity;
import android.text.TextUtils;
import android.util.Log;

import com.a51tgt.fyj.MZApplication;
import com.a51tgt.fyj.R;
import com.a51tgt.fyj.bean.DeviceInfo;
import com.a51tgt.fyj.comm.APIConstants;
import com.a51tgt.fyj.comm.TcpConfig;
import com.a51tgt.fyj.net.TcpUtil;
import com.a51tgt.fyj.utils.CommUtil;
import com.a51tgt.fyj.utils.RestartAPPUtil;
import com.a51tgt.fyj.utils.TipUtil;

//import com.umeng.message.PushAgent;


public class BaseActivity extends AppCompatActivity {

  private WifiManager wifiManager;
  private NetworkInfo networkInfo;
  private Context mContext;

  @Override
  protected void onCreate(Bundle savedInstanceState) {
    super.onCreate(savedInstanceState);
//    PushAgent.getInstance(this).onAppStart();

    mContext = this;
    wifiManager = (WifiManager) mContext.getSystemService(Context.WIFI_SERVICE);

  }

  @Override
  protected void onResume() {
    super.onResume();

    // 监控wifi是否连接
//    IntentFilter ins = new IntentFilter(WifiManager.NETWORK_STATE_CHANGED_ACTION);
//    registerReceiver(netConnReceiver, ins);
//    if (!wifiManager.isWifiEnabled() || !CommUtil.isTGTWiFi(getApplicationContext())) {
//      TipUtil.showAlert(mContext,
//              mContext.getResources().getText(R.string.tip_title).toString(),
//              mContext.getResources().getText(R.string.cannot_find_device).toString(),
//              mContext.getResources().getText(R.string.connect_wifi_button).toString(),
//              new TipUtil.OnAlertSelected(){
//                @Override
//                public void onClick(DialogInterface dialog, int whichButton) {
//                  CommUtil.startWifiSettings(mContext);
//                  dialog.dismiss();
//                }
//              });
//    }
//    else {
//      TcpUtil.getInstance().sendMessage(TcpConfig.GET_DEVICE_INFO, new MyHandler(), 1);
//    }
  }

  /**无线是否连接的监听
   * */
  private BroadcastReceiver netConnReceiver = new BroadcastReceiver() {

    @Override
    public void onReceive(Context context, Intent intent) {
      if (WifiManager.NETWORK_STATE_CHANGED_ACTION.equals(intent.getAction())) {
        if (checknet()) {
          Log.d(">>>>>>>>>>", "成功");
        } else {
          Log.d(">>>>>>>>>>", "正在连接");
        }
      }
    }
  };

  private boolean checknet() {
    ConnectivityManager connManager = (ConnectivityManager) this.getSystemService(CONNECTIVITY_SERVICE);
    // 获取代表联网状态的NetWorkInfo对象
    networkInfo = connManager.getActiveNetworkInfo();
    if (null != networkInfo) {
      return networkInfo.isAvailable();
    }
    return false;
  }

  @SuppressLint("HandlerLeak")
  class MyHandler extends Handler {

    @Override
    public void handleMessage(Message msg) {
      if(msg.what == -10){

        return;
      }
      String response = (String) msg.obj;
      if (TextUtils.isEmpty(response)) {
        return;
      }
      switch (msg.what){
        case 1:

          break;
        default:
          break;
      }
    }
  }

}
